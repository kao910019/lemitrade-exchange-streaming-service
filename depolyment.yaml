apiVersion: v1
kind: Service
metadata:
  name: lemitrade-exchange-streaming-manager-service
spec:
  selector:
    app: lemitrade-exchange-streaming-manager-pod
  ports:
    - name: console
      port: 8888
      targetPort: 8888
---
apiVersion: v1
kind: Service
metadata:
  name: lemitrade-exchange-streaming-listener-service
spec:
  selector:
    app: lemitrade-exchange-streaming-listener-pod
  ports:
    - name: console
      port: 8888
      targetPort: 8888
---
apiVersion: v1
kind: Service
metadata:
  name: lemitrade-exchange-streaming-handler-service
spec:
  selector:
    app: lemitrade-exchange-streaming-handler-pod
  ports:
    - name: console
      port: 8888
      targetPort: 8888
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: lemitrade-exchange-streaming-manager-pod
  labels:
    app: lemitrade-exchange-streaming-manager-pod
spec:
  replicas: 1
  selector:
    matchLabels:
      app: lemitrade-exchange-streaming-manager-pod
  template:
    metadata:
      labels:
        app: lemitrade-exchange-streaming-manager-pod
    spec:
      nodeSelector:
        kubernetes.io/arch: amd64
      #   cloud.google.com/gke-spot: "true"
      imagePullSecrets: 
        - name: registry-secret
      containers:
        - name: lemitrade-exchange-streaming-manager-pod
          image: lemitrade.synology.me:8443/lemitrade/lemitrade-exchange-streaming-service:dev-amd64
          # image: asia-east1-docker.pkg.dev/lemitrade/lemitrade-docker/lemitrade-backend:${LEMITRADE_VERSION}
          imagePullPolicy: Always
          command: ["python", "/app/source/streamingManagerService.py"]
          envFrom:
            - secretRef:
                name: lemitrade-service-secret
          resources:
            requests:
              memory: 500M
              cpu: 1000m
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: lemitrade-exchange-streaming-listener-pod
  labels:
    app: lemitrade-exchange-streaming-listener-pod
spec:
  replicas: 3
  selector:
    matchLabels:
      app: lemitrade-exchange-streaming-listener-pod
  template:
    metadata:
      labels:
        app: lemitrade-exchange-streaming-listener-pod
    spec:
      nodeSelector:
        kubernetes.io/arch: amd64
      #   cloud.google.com/gke-spot: "true"
      imagePullSecrets: 
        - name: registry-secret
      containers:
        - name: lemitrade-exchange-streaming-listener-pod
          image: lemitrade.synology.me:8443/lemitrade/lemitrade-exchange-streaming-service:dev-amd64
          # image: asia-east1-docker.pkg.dev/lemitrade/lemitrade-docker/lemitrade-backend:${LEMITRADE_VERSION}
          imagePullPolicy: Always
          command: ["python", "/app/source/streamingListenerService.py"]
          envFrom:
            - secretRef:
                name: lemitrade-service-secret
          resources:
            requests:
              memory: 500M
              cpu: 1000m
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: lemitrade-exchange-streaming-handler-pod
  labels:
    app: lemitrade-exchange-streaming-handler-pod
spec:
  replicas: 3
  selector:
    matchLabels:
      app: lemitrade-exchange-streaming-handler-pod
  template:
    metadata:
      labels:
        app: lemitrade-exchange-streaming-handler-pod
    spec:
      nodeSelector:
        kubernetes.io/arch: amd64
      #   cloud.google.com/gke-spot: "true"
      imagePullSecrets: 
        - name: registry-secret
      containers:
        - name: lemitrade-exchange-streaming-handler-pod
          image: lemitrade.synology.me:8443/lemitrade/lemitrade-exchange-streaming-service:dev-amd64
          # image: asia-east1-docker.pkg.dev/lemitrade/lemitrade-docker/lemitrade-backend:${LEMITRADE_VERSION}
          imagePullPolicy: Always
          command: ["python", "/app/source/streamingHandlerService.py"]
          envFrom:
            - secretRef:
                name: lemitrade-service-secret
          resources:
            requests:
              memory: 500M
              cpu: 1000m